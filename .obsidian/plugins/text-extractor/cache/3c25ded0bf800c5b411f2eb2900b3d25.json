{"path":".obsidian/plugins/text-extractor/cache/3c25ded0bf800c5b411f2eb2900b3d25.json","text":"Expressions e = z variable e e application Az.e abstraction letz = e ine; Types mono T = « variable Cr...7 application poly & = Va.o quantifier Context and Typing Context I' = € (empty) | Tya:o Typing = Ttre:o Free Type Variables free( a ) = {a} free(C'my...my ) = | free(m ) i=1 free(T ) = U free(o) rioel free(Va. o) = free( o) — {a} free(THe:0) = free(o) — free(T)","libVersion":"0.2.2","langs":"eng"}